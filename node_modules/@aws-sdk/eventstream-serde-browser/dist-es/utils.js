import { __asyncGenerator, __await, __awaiter, __generator } from "tslib";
export var readableStreamtoIterable = function (readableStream) {
    var _a;
    return (_a = {},
        _a[Symbol.asyncIterator] = function () {
            return __asyncGenerator(this, arguments, function () {
                var reader, _a, done, value;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            reader = readableStream.getReader();
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, , 9, 10]);
                            _b.label = 2;
                        case 2:
                            if (!true) return [3, 8];
                            return [4, __await(reader.read())];
                        case 3:
                            _a = _b.sent(), done = _a.done, value = _a.value;
                            if (!done) return [3, 5];
                            return [4, __await(void 0)];
                        case 4: return [2, _b.sent()];
                        case 5: return [4, __await(value)];
                        case 6: return [4, _b.sent()];
                        case 7:
                            _b.sent();
                            return [3, 2];
                        case 8: return [3, 10];
                        case 9:
                            reader.releaseLock();
                            return [7];
                        case 10: return [2];
                    }
                });
            });
        },
        _a);
};
export var iterableToReadableStream = function (asyncIterable) {
    var iterator = asyncIterable[Symbol.asyncIterator]();
    return new ReadableStream({
        pull: function (controller) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, done, value;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4, iterator.next()];
                        case 1:
                            _a = _b.sent(), done = _a.done, value = _a.value;
                            if (done) {
                                return [2, controller.close()];
                            }
                            controller.enqueue(value);
                            return [2];
                    }
                });
            });
        },
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBLE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUFHLFVBQUksY0FBaUM7O0lBQXVCLE9BQUE7UUFDbEcsR0FBQyxNQUFNLENBQUMsYUFBYSxJQUFHOzs7Ozs7NEJBQ2hCLE1BQU0sR0FBRyxjQUFjLENBQUMsU0FBUyxFQUFFLENBQUM7Ozs7OztpQ0FFakMsSUFBSTs0QkFDZSxtQkFBTSxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUE7OzRCQUFyQyxLQUFrQixTQUFtQixFQUFuQyxJQUFJLFVBQUEsRUFBRSxLQUFLLFdBQUE7aUNBQ2YsSUFBSSxFQUFKLGNBQUk7O2dDQUFFLHNCQUFPO21EQUNYLEtBQVU7Z0NBQWhCLHNCQUFnQjs7NEJBQWhCLFNBQWdCLENBQUM7Ozs7NEJBR25CLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQzs7Ozs7O1NBRXhCO1dBQ0Q7QUFia0csQ0FhbEcsQ0FBQztBQUtILE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUFHLFVBQUksYUFBK0I7SUFDekUsSUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO0lBQ3ZELE9BQU8sSUFBSSxjQUFjLENBQUM7UUFDbEIsSUFBSSxZQUFDLFVBQVU7Ozs7O2dDQUNLLFdBQU0sUUFBUSxDQUFDLElBQUksRUFBRSxFQUFBOzs0QkFBdkMsS0FBa0IsU0FBcUIsRUFBckMsSUFBSSxVQUFBLEVBQUUsS0FBSyxXQUFBOzRCQUNuQixJQUFJLElBQUksRUFBRTtnQ0FDUixXQUFPLFVBQVUsQ0FBQyxLQUFLLEVBQUUsRUFBQzs2QkFDM0I7NEJBQ0QsVUFBVSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzs7Ozs7U0FDM0I7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgdXRpbCBmdW5jdGlvbiBjb252ZXJ0aW5nIFJlYWRhYmxlU3RyZWFtIGludG8gYW4gYXN5bmMgaXRlcmFibGUuXG4gKiBSZWZlcmVuY2U6IGh0dHBzOi8vamFrZWFyY2hpYmFsZC5jb20vMjAxNy9hc3luYy1pdGVyYXRvcnMtYW5kLWdlbmVyYXRvcnMvI21ha2luZy1zdHJlYW1zLWl0ZXJhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWRhYmxlU3RyZWFtdG9JdGVyYWJsZSA9IDxUPihyZWFkYWJsZVN0cmVhbTogUmVhZGFibGVTdHJlYW08VD4pOiBBc3luY0l0ZXJhYmxlPFQ+ID0+ICh7XG4gIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl06IGFzeW5jIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgcmVhZGVyID0gcmVhZGFibGVTdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IHsgZG9uZSwgdmFsdWUgfSA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4gICAgICAgIGlmIChkb25lKSByZXR1cm47XG4gICAgICAgIHlpZWxkIHZhbHVlIGFzIFQ7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgIH1cbiAgfSxcbn0pO1xuXG4vKipcbiAqIEEgdXRpbCBmdW5jdGlvbiBjb252ZXJ0aW5nIGFzeW5jIGl0ZXJhYmxlIHRvIGEgUmVhZGFibGVTdHJlYW0uXG4gKi9cbmV4cG9ydCBjb25zdCBpdGVyYWJsZVRvUmVhZGFibGVTdHJlYW0gPSA8VD4oYXN5bmNJdGVyYWJsZTogQXN5bmNJdGVyYWJsZTxUPik6IFJlYWRhYmxlU3RyZWFtPFQ+ID0+IHtcbiAgY29uc3QgaXRlcmF0b3IgPSBhc3luY0l0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICBhc3luYyBwdWxsKGNvbnRyb2xsZXIpIHtcbiAgICAgIGNvbnN0IHsgZG9uZSwgdmFsdWUgfSA9IGF3YWl0IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgIGlmIChkb25lKSB7XG4gICAgICAgIHJldHVybiBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICB9XG4gICAgICBjb250cm9sbGVyLmVucXVldWUodmFsdWUpO1xuICAgIH0sXG4gIH0pO1xufTtcbiJdfQ==